steps:
- powershell: 'gci env:* | sort-object name | Format-Table -AutoSize -Wrap'
  displayName: 'Display env vars'

# Variables ReleasePackageVersion and PreviewPackageVersion are consumed by projects in Microsoft.Bot.Builder.sln.
# For the signed build, they should be settable at queue time. To set that up, define the variables in Azure on the Variables tab.
- task: NuGetToolInstaller@1
  displayName: 'Use NuGet '

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(Parameters.solution)'

- task: VSBuild@1
  displayName: 'Build solution Microsoft.Bot.Builder.sln'
  inputs:
    solution: '$(Parameters.solution)'
    vsVersion: 16.0
    msbuildArgs: '$(MSBuildArguments)'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    maximumCpuCount: true
    logProjectEvents: false

- powershell: |
    $rootFolder = "$(Build.SourcesDirectory)";
    $filespec = $rootFolder + "/libraries/**/obj/project.assets.json";
    $destination = "$(Build.ArtifactStagingDirectory)/diagnosticfiles";

    "Copying files " + $filespec + " to " + $destination + ".";
    " ";

    Get-ChildItem -Recurse -Path "$filespec" | % {
        $relativeFilePath = $_.Directory.ToString().Substring($rootFolder.Length);
        $targetFolder = "$destination" + $relativeFilePath;

        # Create target folder or else Copy-Item creates a file.
        $null = New-Item -ItemType directory -Path $targetFolder -Force

        $_.FullName + " --> " + $targetFolder;

        Copy-Item -Path $_ -Destination $targetFolder
    }
  displayName: 'Copy project.assets.json files to diagnosticfiles folder'

- task: PublishPipelineArtifact@0
  displayName: 'Publish diagnostic files artifact'
  inputs:
    artifactName: 'DiagnosticFiles-$(BuildConfiguration)-$(BuildTarget)'
    targetPath: diagnosticfiles

- script: |
   cd ..
   dir *.* /s
  displayName: 'Dir workspace'
  continueOnError: true
  condition: succeededOrFailed()
